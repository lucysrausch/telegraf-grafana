# Global agent configuration
[agent]
  interval = "1m" # Set the interval to check the data
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = true
  quiet = false
  logfile = ""

[[inputs.http]]
  urls = ["https://services.swpc.noaa.gov/text/3-day-forecast.txt"]
  method = "GET"
  timeout = "5s"
  data_format = "value"
  data_type = "string"
  name_override = "noaa_forecast"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/solarflux/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "integer"
  name_suffix = "_solarflux"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/aindex/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "integer"
  name_suffix = "_aindex"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/kindex/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "integer"
  name_suffix = "_kindex"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/xray/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "string"
  name_suffix = "_xray"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/sunspots/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "integer"
  name_suffix = "_sunspots"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/heliumline/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "float"
  name_suffix = "_heliumline"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/protonflux/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "integer"
  name_suffix = "_protonflux"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/electonflux/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "integer"
  name_suffix = "_electonflux"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/aurora/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "integer"
  name_suffix = "_aurora"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/normalization/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "float"
  name_suffix = "_normalization"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/latdegree/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "float"
  name_suffix = "_latdegree"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/solarwind/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "float"
  name_suffix = "_solarwind"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/magneticfield/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "float"
  name_suffix = "_magneticfield"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/geomagfield/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "string"
  name_suffix = "_geomagfield"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/signalnoise/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "string"
  name_suffix = "_signalnoise"

[[inputs.exec]]
  commands = ["sh -c 'curl -s https://www.hamqsl.com/solarxml.php | xmllint --xpath \"//solardata/muf/text()\" -'"]
  timeout = "5s"
  data_format = "value"
  data_type = "string"
  name_suffix = "_muf"

# Output Plugin InfluxDB
[[outputs.influxdb]]
  database = "telegraf"
  urls = [ "http://127.0.0.1:8086" ]
  username = "telegraf"
  password = "password"

#Telegraf provides telegraf command to manage the configuration, 
#including generate the configuration itself, run the command as below.
